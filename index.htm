<!DOCTYPE html>
<html>
	<head>
		<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
		<meta charset="utf-8">
		<title>2017 East-to-West Cycle Tour Locations</title>
		<style>
			html, body {
				height: 100%;
				margin: 0;
				padding: 0;
				font-family: "Open Sans", "Lucida Sans", Tahoma, Verdana;
			}
			#map {
				height: 100%;
			}
			div#popup {
				position:absolute;
				top:56px;
				left:10px;
				height:560px;
				width:480px;
				background-color:#ffffff;
				display:none;
				border-radius:8px;
				padding:12px;
			}
			div.invisibleinput {
				display:inline;
				width:0;
				overflow:hidden;
			}
			div.invisibleinput input {
				opacity:0;
				filter:alpha(opacity=0);
			}
			div#frame {
				float:left;
				width:360px;
			}
			img#picture {
				width:360px;
			}
		</style>
		<script src="assets/script/jquery-3.2.1.min.js"></script>
	</head>
	<body>
		<script type="text/javascript" src="https://www.google.com/jsapi"></script>
		<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
		<div id="map"></div>
		<div id="popup" onclick="$('#hid').focus();">
			<span id='prev' onclick='popupPrevPoint();'>prev</span>
			<span onclick="closePopup">exit</span>
			<span id='next' onclick="popupNextPoint();">next</span>
			<div class='invisibleinput'><input type='text' id='hid' /></div>
			<div id='title'></div>
			<div id='frame'>
				<img id='picture' />
			</div>
			<span id="comments"></span>
		</div>
		<script>
			$(function(){$('#hid').bind('keydown', keydown);});
			function keydown(event) {
				if (event.keyCode == 39) {
					popupNextPoint();
				} else if (event.keyCode == 37) {
					popupPrevPoint();
				} else if (event.keyCode == 27) {
					closePopup();
				}
			}
			var future_lat;
			var future_lng;
			var points = [];
			function recentre(lat, lng) {
				map.panTo(new google.maps.LatLng(lat, lng));
			}
			function relocateslow(relocationpoints, i, after) {
				if (i < relocationpoints.length) {
					window.setTimeout(function() { recentre(relocationpoints[i].lat, relocationpoints[i].lng) }, 100*i);
				} else {
					window.setTimeout(after, 100*relocationpoints.length);
				}
			}
			function closePopup() {
				$('#popup').hide();
			}
			function popupNextPoint() {
				popupAnotherPoint(function(i) { return i + 1; });
			}
			function popupPrevPoint() {
				popupAnotherPoint(function(i) { return i - 1; } );
			}
			function popupAnotherPoint(other) {
				i = parseFloat($('#popup').attr('i'));
				another_point = null;
				relocationpoints = [];

				for (i = other(i); !another_point && i >= 0 && i < points.length; i = other(i)) {
					checkpoint = points[i];
					//relocationpoints.push(checkpoint);
					//recentre(checkpoint.lat, checkpoint.lng);
					if (checkpoint.source == 'Manual' || checkpoint.source.startsWith('Picture Set')) {
						another_point = checkpoint;
						popupPoint(i);
					}
				}
				if (!another_point) {
					closePopup();
				}
				//relocateslow(relocationpoints, i, function() { popupPoint(i); });
			}
			function popupPoint(i) {
				point = points[i];
				//next_point = null;
				//while (!next_point && ++i < points.length) {
				//	checkpoint = points[i];
				//	recentre(checkpoint.lat, checkpoint.lng);
				//	
				//}
				//next_point = ((i + 1) < points.length) ? points[i + 1] : null;
				recentre(point.lat, point.lng)
				$('#popup').attr('i', i);

				//next = $('#next');
				//if (!next_point) {
				//	$('#next').hide();
				//} else {
				//	$('#next').show();
				//}
				$('#title').html((point.data_i).toString() + ' - ' + point.timestamp);
				$('#comments').html(point.comments);
				if(point.image) {
					$('#frame').show();
					$('#picture').attr('src', point.image);
				} else {
					$('#frame').hide();
				}

				$('#popup').show();
			}
			function getPopupPoint(i) {
				return function()
				{
					popupPoint(i);
				};
			}

			var origin;
			var size3x3;
			var size5x5;
			var anchor3x3;
			var anchor5x5;

			function displayPoint(i, polyline, map) {

				point = points[i]
				
				if (point.exclude == 'Path Start') {
					polyline = [];
				}
				
				if (polyline && point.exclude != 'Path') {
					polyline.push({lat : point.lat, lng: point.lng});
				}

				icon = point.source == "Manual" ? "bullet_red.png" :
					point.source == "Picture Set A" ? "bullet_yellow.png" :
					point.source == "Picture Set B" ? "bullet_yellow.png" :
					point.source == "Picture Set C" ? "bullet_yellow.png" :
					point.source == "Picture Set D" ? "bullet_yellow.png" :
					point.source == "Google" ? "3x3blue.png" :
						"3x3black.png";
				small = icon == "3x3black.png" || icon == "3x3blue.png";
				iconsize = small ? size3x3 : size5x5;
				iconanchor = small ? anchor3x3 : anchor5x5;

				if (small) {
				} else {
					iconobject = {
							url : 'assets/icons/' + icon,
							size : iconsize,
							anchor : iconanchor,
							origin : origin,
							zIndex: google.maps.Marker.MAX_ZINDEX + 1
						};

					var marker = new google.maps.Marker({
						position : { lat : point.lat, lng : point.lng },
						icon : iconobject,
						map: map
					});
					marker.addListener('click', getPopupPoint(i,
						point.datetime,
						point.comments,
						point.source.startsWith('Picture Set') ? point.label : null,
						point.lat,
						point.lng,
						point.next_lat,
						point.next_lng)
					);
				}

				if (point.exclude == 'Path Finish') {
					var cyclepath = new google.maps.Polyline({
						path: polyline,
						geodesic: true,
						strokeColor: '#000000',
						strokeOpacity: 0.8,
						strokeWeight: 1.5
					});
					cyclepath.setMap(map);
				}

				return polyline;
			}

			function displayPoints() {
				var polyline = null;
				for (var i = 0; i < points.length; i += 1) {
					polyline = displayPoint(i, polyline, map);
				}
			}

			function receiveData(response) {

				datatable = response.getDataTable();
				datatableNumberOfRows = datatable.getNumberOfRows();
				
				origin = new google.maps.Point(0, 0);
				size3x3 = new google.maps.Size(3, 3);
				size5x5 = new google.maps.Size(5, 5);
				anchor3x3 = new google.maps.Point(1, 1);
				anchor5x5 = new google.maps.Point(2, 2);

				var exclude;

				for (var i = 1; i < datatableNumberOfRows; i += 1) {

					exclude = datatable.getValue(i,0);

				if (exclude && !exclude.startsWith('Path')) continue;

					point = {
						data_i : i + 1,
						exclude : exclude,
						source : datatable.getValue(i,1),
						label : datatable.getValue(i,2),
						datetime : datatable.getValue(i,4),
						lat : datatable.getValue(i,6),
						lng : datatable.getValue(i,7),
						next_lat : i == datatableNumberOfRows - 1 ? null : datatable.getValue(i+1,6),
						next_lng : i == datatableNumberOfRows - 1 ? null : datatable.getValue(i+1,7),
						comments : datatable.getValue(i,3)
					};
					if (point.source.startsWith('Picture Set')) {
						point.image = 'assets/pictures/' + point.label;
					}
					points.push(point);
				}
				displayPoints();
			}

			
			function initMap() {
				google.charts.load('current', {packages: ['corechart']});

				google.setOnLoadCallback(drawMap);
			}

			function drawMap() {

				map = new google.maps.Map(document.getElementById('map'), {
					zoom: 4,
					center: {lat: 47, lng: -91},
					mapTypeId: google.maps.MapTypeId.TERRAIN
				});

				var query = new google.visualization.Query('https://docs.google.com/spreadsheets/d/1qSjDuGdj6l9aj-ghjLUjHrESR5E4NfUIVvnlb0PPmzE/gviz/tq?sheet=Actual&tq=select%20A,B,C,D,E,F,H,I');
				query.send(receiveData);
			}
			
		</script>
		<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA9Op0MuSyx-Rog06OL2UahLIU2hb_wvfA&callback=initMap">
		</script>
	</body>
</html>
